// sigsegv: Miscellaneous

"Games"
{
	"#default"
	{
		"#supported"
		{
			engine "tf2"
		}
		
		"sigsegv"
		{
			"addrs"
			{
				"UTIL_EntitiesInBox"
				{
					type "sym"
					sym  "_Z18UTIL_EntitiesInBoxRK6VectorS1_P20CFlaggedEntitiesEnum"
				}
				"UTIL_EntitiesInSphere"
				{
					type "sym"
					sym  "_Z21UTIL_EntitiesInSphereRK6VectorfP20CFlaggedEntitiesEnum"
				}
				"CalcDistanceToLineSegment"
				{
					type "sym"
					sym  "_Z25CalcDistanceToLineSegmentRK6VectorS1_S1_Pf"
				}
				
				"CreateEntityByName"
				{
					type   "func ebpprologue unistr"
					sym    "_Z18CreateEntityByNamePKci"
					unistr "CreateEntityByName( %s, %d ) - CreateEdict failed."
				}
				
//				"TranslateWeaponEntForClass"
//				{
//					type   "func ebpprologue uniref"
//					sym    "_Z26TranslateWeaponEntForClassPKci"
//					uniref "pszWpnEntTranslationList"
//				}
				
				"CBaseEntity::GetNetworkable"
				{
					type "sym"
					sym  "_ZN11CBaseEntity14GetNetworkableEv"
				}
				"CBaseEntity::CalcAbsolutePosition"
				{
					type "sym"
					sym  "_ZN11CBaseEntity20CalcAbsolutePositionEv"
				}
				"CBaseEntity::IsAlive"
				{
					type "sym"
					sym  "_ZN11CBaseEntity7IsAliveEv"
				}
				
				"CBasePlayer::IsBot"
				{
					type "sym"
					sym  "_ZNK11CBasePlayer5IsBotEv"
				}
				
				"CTFPlayer::ApplyAbsVelocityImpulse"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN9CTFPlayer23ApplyAbsVelocityImpulseERK6Vector"
					unistr "mult_aiming_knockback_resistance"
				}
				"CTFPlayer::CanBeForcedToLaugh"
				{
					type "sym"
					sym  "_ZN9CTFPlayer18CanBeForcedToLaughEv"
				}
				"CTFPlayer::IsMiniBoss"
				{
					type "sym"
					sym  "_ZNK9CTFPlayer10IsMiniBossEv"
				}
				"CTFPlayer::IsPlayerClass"
				{
					type "sym"
					sym  "_ZNK9CTFPlayer13IsPlayerClassEi"
				}
				"CTFPlayer::ShouldGib"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN9CTFPlayer9ShouldGibERK15CTakeDamageInfo"
					unistr "crit_kill_will_gib"
				}
				"CTFPlayer::SpeakConceptIfAllowed"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN9CTFPlayer21SpeakConceptIfAllowedEiPKcPcjP16IRecipientFilter"
					unistr "disguiseclass:%s"
				}
				// CTFPlayer::TFPlayerThink
				// warning! warning! not a straightforward ebp prologue!
				// push ebx; mov ebx, esp
				
				"CTFGameRules::PushAllPlayersAway"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18PushAllPlayersAwayERK6VectorffiP10CUtlVectorIP9CTFPlayer10CUtlMemoryIS5_iEE"
				}
				
				"CTFWeaponBase::DeflectProjectiles"
				{
					type "sym"
					sym  "_ZN13CTFWeaponBase18DeflectProjectilesEv"
				}
				
				"CTFMinigun::AttackEnemyProjectiles"
				{
					type "sym"
					sym  "_ZN10CTFMinigun22AttackEnemyProjectilesEv"
				}
				
				"CTFSniperRifle::ExplosiveHeadShot"
				{
					type "sym"
					sym  "_ZN14CTFSniperRifle17ExplosiveHeadShotEP9CTFPlayerS1_"
				}
				"CTFSniperRifle::ItemPostFrame"
				{
					type "sym"
					sym  "_ZN14CTFSniperRifle13ItemPostFrameEv"
				}
				
				"CTFSniperRifleClassic::ItemPostFrame"
				{
					type "sym"
					sym  "_ZN21CTFSniperRifleClassic13ItemPostFrameEv"
				}
				
				"CTFKnife::PrimaryAttack"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN8CTFKnife13PrimaryAttackEv"
					unistr "DisguiseOnKill"
				}
				
				"CCurrencyPack::ComeToRest"
				{
					type    "func datamap vthunk"
					sym     "_ZN13CCurrencyPack10ComeToRestEv"
					datamap "CItem::m_DataMap"
					func    "CItemComeToRest"
					vtable  "[VT] CCurrencyPack"
				}
				
				"CNavMesh::GetNavArea"
				{
					type    "func ebpprologue vprof"
					sym     "_ZNK8CNavMesh10GetNavAreaERK6Vectorf"
					v_name  "CNavMesh::GetNavArea"
					v_group "NextBot"
				}
				
				"CTFNavMesh::CollectBuiltObjects"
				{
					type "sym"
					sym  "_ZN10CTFNavMesh19CollectBuiltObjectsEP10CUtlVectorIP11CBaseObject10CUtlMemoryIS2_iEEi"
				}
				
				"CTFNavArea::IsBlocked"
				{
					type   "func knownvtidx"
					sym    "_ZNK10CTFNavArea9IsBlockedEib"
					vtable "[VT] CTFNavArea"
					idx    "0x11"
				}
				"CTFNavArea::IsValidForWanderingPopulation"
				{
					type "sym"
					sym  "_ZNK10CTFNavArea29IsValidForWanderingPopulationEv"
				}
				
				"CTFBotPathCost::operator()"
				{
					type "sym"
					sym  "_ZNK14CTFBotPathCostclEP8CNavAreaS1_PK10CNavLadderPK13CFuncElevatorf"
				}
				
				"Path::Compute<CTFBotPathCost>"
				{
					type "sym"
					sym  "_ZN4Path7ComputeI14CTFBotPathCostEEbP8INextBotRK6VectorRT_fb"
				}
				
				"PathFollower::Update"
				{
					type "sym"
					sym  "_ZN12PathFollower6UpdateEP8INextBot"
				}
				"PathFollower::SetMinLookAheadDistance"
				{
					type "sym"
					sym  "_ZN12PathFollower23SetMinLookAheadDistanceEf"
				}
				
				"CFuncNavCost::IsApplicableTo"
				{
					type   "func ebpprologue unistr"
					sym    "_ZNK12CFuncNavCost14IsApplicableToEP20CBaseCombatCharacter"
					unistr "mission_sniper"
					// alt: "mission_spy"
					// alt: "mission_sentry_buster"
				}
			}
		}
	}
}
