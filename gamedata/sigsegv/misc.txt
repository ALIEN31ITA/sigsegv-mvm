// miscellaneous

"Games"
{
	"#default"
	{
		"#supported"
		{
			engine "tf2"
		}
		
		"sigsegv"
		{
			"addrs"
			{
				"IBaseProjectileAutoList::m_IBaseProjectileAutoListAutoList"
				{
					type "sym"
					sym  "_ZN23IBaseProjectileAutoList33m_IBaseProjectileAutoListAutoListE"
				}
				
				"CalcDistanceToLineSegment"
				{
					type "sym"
					sym  "_Z25CalcDistanceToLineSegmentRK6VectorS1_S1_Pf"
				}
				
				"CreateEntityByName"
				{
					type   "func ebpprologue unistr"
					sym    "_Z18CreateEntityByNamePKci"
					unistr "CreateEntityByName( %s, %d ) - CreateEdict failed."
				}
				
//				"TranslateWeaponEntForClass"
//				{
//					type   "func ebpprologue uniref"
//					sym    "_Z26TranslateWeaponEntForClassPKci"
//					uniref "pszWpnEntTranslationList"
//				}
				
				"CBaseEntity::CalcAbsolutePosition"
				{
					type "sym"
					sym  "_ZN11CBaseEntity20CalcAbsolutePositionEv"
				}
				"CBaseEntity::ClassMatches"
				{
					type "sym"
					sym  "_ZN11CBaseEntity12ClassMatchesEPKc"
				}
				"CBaseEntity::DispatchTraceAttack"
				{
					type "fixed"
					sym  "_ZN11CBaseEntity19DispatchTraceAttackERK15CTakeDamageInfoRK6VectorP10CGameTraceP15CDmgAccumulator"
					addr  "0x18c830"
					build "3277805"
				}
				
				"CBasePlayer::IsBot"
				{
					type "sym"
					sym  "_ZNK11CBasePlayer5IsBotEv"
				}
				
				"CTFGameRules::PushAllPlayersAway"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18PushAllPlayersAwayERK6VectorffiP10CUtlVectorIP9CTFPlayer10CUtlMemoryIS5_iEE"
				}
				
				"CTFWeaponBase::DeflectProjectiles"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN13CTFWeaponBase18DeflectProjectilesEv"
					unistr "victim:0"
				}
				
				"CTFMinigun::AttackEnemyProjectiles"
				{
					type "sym"
					sym  "_ZN10CTFMinigun22AttackEnemyProjectilesEv"
				}
				
				"CTFSniperRifle::ExplosiveHeadShot"
				{
					type "sym"
					sym  "_ZN14CTFSniperRifle17ExplosiveHeadShotEP9CTFPlayerS1_"
				}
				"CTFSniperRifle::ItemPostFrame"
				{
					type "sym"
					sym  "_ZN14CTFSniperRifle13ItemPostFrameEv"
				}
				"CTFSniperRifle::GetPenetrateType"
				{
					type  "fixed"
					sym   "_ZNK14CTFSniperRifle16GetPenetrateTypeEv"
					addr  "0x59e1e0"
					build "3277805"
				}
				
				"CTFSniperRifleClassic::ItemPostFrame"
				{
					type "sym"
					sym  "_ZN21CTFSniperRifleClassic13ItemPostFrameEv"
				}
				
				"CTFKnife::PrimaryAttack"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN8CTFKnife13PrimaryAttackEv"
					unistr "DisguiseOnKill"
				}
				
				"CCurrencyPack::ComeToRest"
				{
					type    "func datamap vthunk"
					sym     "_ZN13CCurrencyPack10ComeToRestEv"
					datamap "CItem::m_DataMap"
					func    "CItemComeToRest"
					vtable  ".?AVCCurrencyPack@@"
				}
				"CCurrencyPack::MyTouch"
				{
					type "sym"
					sym  "_ZN13CCurrencyPack7MyTouchEP11CBasePlayer"
				}
				
				"CFuncNavCost::IsApplicableTo"
				{
					type   "func ebpprologue unistr"
					sym    "_ZNK12CFuncNavCost14IsApplicableToEP20CBaseCombatCharacter"
					unistr "mission_sniper"
					// alt: "mission_spy"
					// alt: "mission_sentry_buster"
				}
				
				"CTFReviveMarker::Create"
				{
					type  "fixed"
					sym   "_ZN15CTFReviveMarker6CreateEP9CTFPlayer"
					addr  "0x4b9d50"
					build "3271684"
				}
				"CTFReviveMarker::AddMarkerHealth"
				{
					type  "fixed"
					sym   "_ZN15CTFReviveMarker15AddMarkerHealthEf"
					addr  "0x4b9b90"
					build "3271684"
				}
				"CTFReviveMarker::ReviveThink"
				{
					type  "fixed"
					sym   "_ZN15CTFReviveMarker11ReviveThinkEv"
					addr  "0x4ba390"
					build "3271684"
				}
				
				"CTFBonesaw::GetWeaponID"
				{
					type "sym"
					sym  "_ZNK10CTFBonesaw11GetWeaponIDEv"
				}
				
				"CBulletPenetrateEnum::EnumEntity"
				{
					type   "func knownvtidx"
					sym    "_ZN20CBulletPenetrateEnum10EnumEntityEP13IHandleEntity"
					vtable ".?AVCBulletPenetrateEnum@@"
					idx    "0x00"
				}
				
				"CTFBat_Giftwrap::GetWeaponID"
				{
					type "sym"
					sym  "_ZNK15CTFBat_Giftwrap11GetWeaponIDEv"
				}
				
				"CAttributeManager::AttribHookValue<int>"
				{
					type "sym"
					sym  "_ZN17CAttributeManager15AttribHookValueIiEET_S1_PKcPK11CBaseEntityP10CUtlVectorIPS4_10CUtlMemoryIS8_iEEb"
				}
				"CAttributeManager::AttribHookValue<float>"
				{
					type "sym"
					sym  "_ZN17CAttributeManager15AttribHookValueIfEET_S1_PKcPK11CBaseEntityP10CUtlVectorIPS4_10CUtlMemoryIS8_iEEb"
				}
				"CAttributeManager::ApplyAttributeFloatWrapper"
				{
					type "sym"
					sym  "_ZN17CAttributeManager26ApplyAttributeFloatWrapperEfP11CBaseEntity8string_tP10CUtlVectorIS1_10CUtlMemoryIS1_iEE"
				}
				
				"CBaseServer::BroadcastMessage1"
				{
					type "sym"
					sym  "_ZN11CBaseServer16BroadcastMessageER11INetMessagebb"
					lib  "engine"
				}
				"CBaseServer::BroadcastMessage2"
				{
					type "sym"
					sym  "_ZN11CBaseServer16BroadcastMessageER11INetMessageR16IRecipientFilter"
					lib  "engine"
				}
				
				"SVC_UserMessage::WriteToBuffer"
				{
					type  "fixed"
					sym   "_ZN15SVC_UserMessage13WriteToBufferER8bf_write"
					addr  "0x1da230"
					build "3283568"
					lib   "engine"
				}
				"SVC_UserMessage::ReadFromBuffer"
				{
					type  "fixed"
					sym   "_ZN15SVC_UserMessage14ReadFromBufferER7bf_read"
					addr  "0x1d5920"
					build "3283568"
					lib   "engine"
				}
				
				"CMannVsMachineStats::SendUpgradesToPlayer"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats20SendUpgradesToPlayerEP9CTFPlayerP10CUtlVectorI12CUpgradeInfo10CUtlMemoryIS3_iEE"
				}
				
				"EvaluateConditional"
				{
					type "sym"
					sym  "_Z19EvaluateConditionalPKc"
				}
				
				"UTIL_GetListenServerHost"
				{
					type "sym"
					sym  "_Z24UTIL_GetListenServerHostv"
				}
				
				"CStdMemAlloc::Alloc"
				{
					type   "func knownvtidx"
					sym    "_ZN12CStdMemAlloc5AllocEj"
					vtable ".?AVCStdMemAlloc@@"
					idx    "0x01"
					lib    "tier0"
				}
				
				"[engine] CUtlBuffer::EnsureCapacity"
				{
					type  "fixed"
					sym   "_ZN10CUtlBuffer14EnsureCapacityEi"
					addr  "0x251b60"
					build "3283568"
					lib   "engine"
				}
				"[engine] bf_read::bf_read"
				{
					type  "fixed"
					sym   "_ZN7bf_readC1EPKcPKvii"
					addr  "0x253610"
					build "3283568"
					lib   "engine"
				}
				"[engine] bf_write::bf_write"
				{
					type  "fixed"
					sym   "_ZN8bf_writeC1EPvii"
					addr  "0x253690"
					build "3283568"
					lib   "engine"
				}
				
				"CDemoPlayer::ReadPacket"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN11CDemoPlayer10ReadPacketEv"
					unistr "Tried to read a demo message with no demo file\n"
					lib    "engine"
				}
				"CHLTVServer::ReadCompeleteDemoFile"
				{
					type  "fixed"
					sym   "_ZN11CHLTVServer21ReadCompeleteDemoFileEv"
					addr  "0x19c2b0"
					build "3283568"
					lib   "engine"
				}
				"CDemoRecorder::RecordStringTables"
				{
					type   "func knownvtidx"
					sym    "_ZN13CDemoRecorder18RecordStringTablesEv"
					vtable ".?AVCDemoRecorder@@"
					idx    "0x0d"
					lib    "engine"
				}
				"CHLTVDemoRecorder::RecordStringTables"
				{
					type   "func knownvtidx"
					sym    "_ZN17CHLTVDemoRecorder18RecordStringTablesEv"
					vtable ".?AVCHLTVDemoRecorder@@"
					idx    "0x0d"
					lib    "engine"
				}
				"CReplayDemoRecorder::RecordStringTables"
				{
					type   "func knownvtidx"
					sym    "_ZN19CReplayDemoRecorder18RecordStringTablesEv"
					vtable ".?AVCReplayDemoRecorder@@"
					idx    "0x0d"
					lib    "engine"
				}
				
				"CTFGameRules::PlayerKilled"
				{
					type "sym"
					sym  "_ZN12CTFGameRules12PlayerKilledEP11CBasePlayerRK15CTakeDamageInfo"
				}
				"CTFGameRules::ShouldDropSpellPickup"
				{
					type "sym"
					sym  "_ZN12CTFGameRules21ShouldDropSpellPickupEv"
				}
				"CTFGameRules::DropSpellPickup"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules15DropSpellPickupERK6Vectori"
				}
				"CTFGameRules::IsUsingSpells"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules13IsUsingSpellsEv"
				}
				
				"KeyValues::LoadFromFile"
				{
					type "sym"
					sym  "_ZN9KeyValues12LoadFromFileEP15IBaseFileSystemPKcS3_b"
				}
				
				"CBasePlayer::EyeVectors"
				{
					type  "fixed"
					sym   "_ZN11CBasePlayer10EyeVectorsEP6VectorS1_S1_"
					addr  "0x19ac90"
					build "3283568"
				}
				
				"CBasePlayer::CommitSuicide"
				{
					type "sym"
					sym  "_ZN11CBasePlayer13CommitSuicideEbb"
				}
				
				"CUserMessages::LookupUserMessage"
				{
					type "sym"
					sym  "_ZN13CUserMessages17LookupUserMessageEPKc"
				}
				"CUserMessages::Register"
				{
					type "sym"
					sym  "_ZN13CUserMessages8RegisterEPKci"
				}
				
				"clear_debug_overlays"
				{
					type "sym"
					sym  "_ZL20clear_debug_overlaysRK8CCommand"
				}
				
				"ConColorMsg"
				{
					type "sym"
					sym  "_Z11ConColorMsgRK5ColorPKcz"
					lib  "tier0"
				}
				
				"CTFPowerupBottle::ReapplyProvision"
				{
					type "sym"
					sym  "_ZN16CTFPowerupBottle16ReapplyProvisionEv"
				}
				
				"CTFGameRules::RadiusDamage"
				{
					type "sym"
					sym  "_ZN12CTFGameRules12RadiusDamageER19CTFRadiusDamageInfo"
				}
				"CEntitySphereQuery::CEntitySphereQuery [C1]"
				{
					type "sym"
					sym  "_ZN18CEntitySphereQueryC1ERK6Vectorfi"
				}
				"CTFRadiusDamageInfo::ApplyToEntity"
				{
					type "sym"
					sym  "_ZN19CTFRadiusDamageInfo13ApplyToEntityEP11CBaseEntity"
				}
				"CBaseEntity::TakeDamage"
				{
					type "sym"
					sym  "_ZN11CBaseEntity10TakeDamageERK15CTakeDamageInfo"
				}
				
				"CBaseEntity::EyeAngles"
				{
					type "sym"
					sym  "_ZN11CBaseEntity9EyeAnglesEv"
				}
				
				"CObjectDispenser::DispenseThink"
				{
					type "sym"
					sym  "_ZN16CObjectDispenser13DispenseThinkEv"
				}
				"CObjectDispenser::GetDispenserRadius"
				{
					type "sym"
					sym  "_ZN16CObjectDispenser18GetDispenserRadiusEv"
				}
				
				"CBaseEntity::EyePosition"
				{
					type "sym"
					sym  "_ZN11CBaseEntity11EyePositionEv"
				}
				
				"CBaseEntity::SetOwnerEntity"
				{
					type "sym"
					sym  "_ZN11CBaseEntity14SetOwnerEntityEPS_"
				}
				
				"CBaseEntity::SetAbsOrigin"
				{
					type "sym"
					sym  "_ZN11CBaseEntity12SetAbsOriginERK6Vector"
				}
				"CBaseEntity::SetAbsAngles"
				{
					type "sym"
					sym  "_ZN11CBaseEntity12SetAbsAnglesERK6QAngle"
				}
				
				"CBaseEntity::Spawn"
				{
					type "sym"
					sym  "_ZN11CBaseEntity5SpawnEv"
				}
				
				"CBaseObject::StartPlacement"
				{
					type "sym"
					sym  "_ZN11CBaseObject14StartPlacementEP9CTFPlayer"
				}
				"CBaseObject::StartBuilding"
				{
					type "sym"
					sym  "_ZN11CBaseObject13StartBuildingEP11CBaseEntity"
				}
				
				"CTFWeaponBuilder::StartBuilding"
				{
					type "sym"
					sym  "_ZN16CTFWeaponBuilder13StartBuildingEv"
				}
				
				"CEconItemView::GetItemDefIndex"
				{
					type "sym"
					sym  "_ZNK13CEconItemView15GetItemDefIndexEv"
				}
				
				"CObjectSentrygun::GetTurretAngles"
				{
					type "sym"
					sym  "_ZNK16CObjectSentrygun15GetTurretAnglesEv"
				}
				"CObjectDispenser::GetAvailableMetal"
				{
					type "sym"
					sym  "_ZNK16CObjectDispenser17GetAvailableMetalEv"
				}
				
				"CMultiplayRules::VoiceCommand"
				{
					type "sym"
					sym  "_ZN15CMultiplayRules12VoiceCommandEP22CBaseMultiplayerPlayerii"
				}
				
				"CTFBotHintEngineerNest::HintTeleporterThink"
				{
					type "sym"
					sym  "_ZN22CTFBotHintEngineerNest19HintTeleporterThinkEv"
				}
				
				"ITFBotHintEntityAutoList::m_ITFBotHintEntityAutoListAutoList"
				{
					type "sym"
					sym  "_ZN24ITFBotHintEntityAutoList34m_ITFBotHintEntityAutoListAutoListE"
				}
				
				"ICaptureFlagAutoList::m_ICaptureFlagAutoListAutoList"
				{
					type "sym"
					sym  "_ZN20ICaptureFlagAutoList30m_ICaptureFlagAutoListAutoListE"
				}
				
				"CBaseEntity::Remove"
				{
					type "sym"
					sym  "_ZN11CBaseEntity6RemoveEv"
				}
				
				"UTIL_EntitiesInSphere"
				{
					type "sym"
					sym  "_Z21UTIL_EntitiesInSphereRK6VectorfP20CFlaggedEntitiesEnum"
				}
				"CTFProjectile_Jar::Explode"
				{
					type "sym"
					sym  "_ZN17CTFProjectile_Jar7ExplodeEP10CGameTracei"
				}
				"CBaseProjectile::GetProjectileType"
				{
					type "sym"
					sym  "_ZNK15CBaseProjectile17GetProjectileTypeEv"
				}
				"CTFWeaponBaseGrenadeProj::GetWeaponID"
				{
					type "sym"
					sym  "_ZNK24CTFWeaponBaseGrenadeProj11GetWeaponIDEv"
				}
				
				"DispatchParticleEffect [overload 1]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc20ParticleAttachment_tP11CBaseEntityS0_b"
				}
				"DispatchParticleEffect [overload 2]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc20ParticleAttachment_tP11CBaseEntityib"
				}
				"DispatchParticleEffect [overload 3]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc6Vector6QAngleP11CBaseEntity"
				}
				"DispatchParticleEffect [overload 4]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc6VectorS1_6QAngleP11CBaseEntity"
				}
				"DispatchParticleEffect [overload 5]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffecti6VectorS_6QAngleP11CBaseEntity"
				}
				"DispatchParticleEffect [overload 6]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc20ParticleAttachment_tP11CBaseEntityS0_6VectorS4_bb"
				}
				"DispatchParticleEffect [overload 7]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc6Vector6QAngleS1_S1_bP11CBaseEntityi"
				}
				"StopParticleEffects"
				{
					type "sym"
					sym  "_Z19StopParticleEffectsP11CBaseEntity"
				}
				
				"CBaseEntity::EmitSound"
				{
					type "sym"
					sym  "_ZN11CBaseEntity9EmitSoundEPKcfPf"
				}
				
				"IGameSystem::Add"
				{
					type "sym"
					sym  "_ZN11IGameSystem3AddEPS_"
				}
				"IGameSystem::Remove"
				{
					type "sym"
					sym  "_ZN11IGameSystem6RemoveEPS_"
				}
				
				"CBaseEntity::PhysicsSimulate"
				{
					type "sym"
					sym  "_ZN11CBaseEntity15PhysicsSimulateEv"
				}
				
				"CTFBaseProjectile::FlyThink"
				{
					type "sym"
					sym  "_ZN17CTFBaseProjectile8FlyThinkEv"
				}
				
				"CBaseEntity::GetVelocity"
				{
					type "sym"
					sym  "_ZN11CBaseEntity11GetVelocityEP6VectorS1_"
				}
				
				"CBaseEntity::WorldSpaceCenter"
				{
					type "sym"
					sym  "_ZNK11CBaseEntity16WorldSpaceCenterEv"
				}
				
				"net_blocksize"
				{
					type "sym"
					sym  "net_blocksize"
					lib  "engine"
				}
				"net_maxroutable"
				{
					type "sym"
					sym  "net_maxroutable"
					lib  "engine"
				}
				"sv_maxroutable"
				{
					type "sym"
					sym  "_ZL14sv_maxroutable"
					lib  "engine"
				}
				"NET_SendPacket"
				{
					type "sym"
					sym  "_Z14NET_SendPacketP11INetChanneliRK8netadr_sPKhiP8bf_writeb"
					lib  "engine"
				}
				"NET_SendLong"
				{
					type "sym"
					sym  "_Z12NET_SendLongP11INetChanneliiPKciPK8sockaddrii"
					lib  "engine"
				}
				"NET_SendTo"
				{
					type "sym"
					sym  "_Z10NET_SendTobiPKciPK8sockaddrii"
					lib  "engine"
				}
				"CNetChan::GetMaxRoutablePayloadSize"
				{
					type "sym"
					sym  "_ZN8CNetChan25GetMaxRoutablePayloadSizeEv"
					lib  "engine"
				}
				
				"CTFWeaponBaseGun::FirePipeBomb"
				{
					type "sym"
					sym  "_ZN16CTFWeaponBaseGun12FirePipeBombEP9CTFPlayeri"
				}
				
				"CBaseEntity::CreateNoSpawn"
				{
					type "sym"
					sym  "_ZN11CBaseEntity13CreateNoSpawnEPKcRK6VectorRK6QAnglePS_"
				}
				
				"WeaponID_IsSniperRifle"
				{
					type "sym"
					sym  "_Z22WeaponID_IsSniperRiflei"
				}
				"WeaponID_IsSniperRifleOrBow"
				{
					type "sym"
					sym  "_Z27WeaponID_IsSniperRifleOrBowi"
				}
				
				"CTFKnife::GetMeleeDamage"
				{
					type "sym"
					sym  "_ZN8CTFKnife14GetMeleeDamageEP11CBaseEntityPiS2_"
				}
				
				"CObjectSapper::Spawn"
				{
					type "sym"
					sym  "_ZN13CObjectSapper5SpawnEv"
				}
				
				"CTFGameRules::ApplyOnDamageAliveModifyRules"
				{
					type "sym"
					sym  "_ZN12CTFGameRules29ApplyOnDamageAliveModifyRulesERK15CTakeDamageInfoP11CBaseEntityRNS_20DamageModifyExtras_tE"
				}
				
				"NextBotTraversableTraceFilter::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN29NextBotTraversableTraceFilter15ShouldHitEntityEP13IHandleEntityi"
				}
				
				"CUpgrades::GetUpgradeAttributeName"
				{
					type "sym"
					sym  "_ZNK9CUpgrades23GetUpgradeAttributeNameEi"
				}
				
				"GetItemSchema"
				{
					type "sym"
					sym  "_Z13GetItemSchemav"
				}
				
				"CEconItemSchema::GetAttributeDefinitionByName"
				{
					type "sym"
					sym  "_ZN15CEconItemSchema28GetAttributeDefinitionByNameEPKc"
				}
				
				"CTFGameRules::CanUpgradeWithAttrib"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20CanUpgradeWithAttribEP9CTFPlayeritP22CMannVsMachineUpgrades"
				}
				"CTFGameRules::GetCostForUpgrade"
				{
					type "sym"
					sym  "_ZN12CTFGameRules17GetCostForUpgradeEP22CMannVsMachineUpgradesiiP9CTFPlayer"
				}
				"CTFGameRules::GetUpgradeTier"
				{
					type "sym"
					sym  "_ZN12CTFGameRules14GetUpgradeTierEi"
				}
				"CTFGameRules::IsUpgradeTierEnabled"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20IsUpgradeTierEnabledEP9CTFPlayerii"
				}
				
				"CBaseCombatCharacter::GetLastKnownArea"
				{
					type "sym"
					sym  "_ZNK20CBaseCombatCharacter16GetLastKnownAreaEv"
				}
				
				"CBasePlayer::GetSteamID"
				{
					type "sym"
					sym  "_ZN11CBasePlayer10GetSteamIDEP8CSteamID"
				}
				
				"CMannVsMachineStats::GetUpgradeSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats18GetUpgradeSpendingEP9CTFPlayer"
				}
				"CMannVsMachineStats::GetBottleSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats17GetBottleSpendingEP9CTFPlayer"
				}
				"CMannVsMachineStats::GetBuyBackSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats18GetBuyBackSpendingEP9CTFPlayer"
				}
				"CMannVsMachineStats::ResetUpgradeSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats20ResetUpgradeSpendingEP9CTFPlayer"
				}
				
				"CPopulationManager::FindOrAddPlayerUpgradeHistory [CTFPlayer *]"
				{
					type "sym"
					sym  "_ZN18CPopulationManager29FindOrAddPlayerUpgradeHistoryEP9CTFPlayer"
				}
				"CPopulationManager::FindCheckpointSnapshot [CTFPlayer *]"
				{
					type "sym"
					sym  "_ZNK18CPopulationManager22FindCheckpointSnapshotEP9CTFPlayer"
				}
				"CPopulationManager::RemovePlayerAndItemUpgradesFromHistory"
				{
					type "sym"
					sym  "_ZN18CPopulationManager38RemovePlayerAndItemUpgradesFromHistoryEP9CTFPlayer"
				}
				
				"CPopulationManager::GetNumRespecsAvailableForPlayer"
				{
					type "sym"
					sym  "_ZN18CPopulationManager31GetNumRespecsAvailableForPlayerEP9CTFPlayer"
				}
				"CPopulationManager::SetNumRespecsForPlayer"
				{
					type "sym"
					sym  "_ZN18CPopulationManager22SetNumRespecsForPlayerEP9CTFPlayeri"
				}
				"CPopulationManager::AddRespecToPlayer"
				{
					type "sym"
					sym  "_ZN18CPopulationManager17AddRespecToPlayerEP9CTFPlayer"
				}
				"CPopulationManager::RemoveRespecFromPlayer"
				{
					type "sym"
					sym  "_ZN18CPopulationManager22RemoveRespecFromPlayerEP9CTFPlayer"
				}
				
				"CGameRules::GetViewVectors"
				{
					type "sym"
					sym  "_ZNK10CGameRules14GetViewVectorsEv"
				}
				
				"ICurrencyPackAutoList::m_ICurrencyPackAutoListAutoList"
				{
					type "sym"
					sym  "_ZN21ICurrencyPackAutoList31m_ICurrencyPackAutoListAutoListE"
				}
				
				"CTFPowerup::GetLifeTime"
				{
					type "sym"
					sym  "_ZN10CTFPowerup11GetLifeTimeEv"
				}
				
				"CBaseEntity::GetNextThink"
				{
					type "sym"
					sym  "_ZN11CBaseEntity12GetNextThinkEPKc"
				}
				
				"CCurrencyPack::SetAmount"
				{
					type "sym"
					sym  "_ZN13CCurrencyPack9SetAmountEf"
				}
				
				"CBaseCombatCharacter::Weapon_GetSlot"
				{
					type "sym"
					sym  "_ZNK20CBaseCombatCharacter14Weapon_GetSlotEi"
				}
			}
		}
	}
}
