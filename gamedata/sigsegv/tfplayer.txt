// tfplayer

"Games"
{
	"#default"
	{
		"#supported"
		{
			engine "tf2"
		}
		
		"sigsegv"
		{
			"addrs"
			{
				"CTFPlayer::ApplyAbsVelocityImpulse"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN9CTFPlayer23ApplyAbsVelocityImpulseERK6Vector"
					unistr "mult_aiming_knockback_resistance"
				}
				"CTFPlayer::ApplyPushFromDamage"
				{
					type "sym"
					sym  "_ZN9CTFPlayer19ApplyPushFromDamageERK15CTakeDamageInfo6Vector"
				}
				"CTFPlayer::IsMiniBoss"
				{
					type "sym"
					sym  "_ZNK9CTFPlayer10IsMiniBossEv"
				}
				"CTFPlayer::IsPlayerClass"
				{
					type "sym"
					sym  "_ZNK9CTFPlayer13IsPlayerClassEi"
				}
				"CTFPlayer::ShouldGib"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN9CTFPlayer9ShouldGibERK15CTakeDamageInfo"
					unistr "crit_kill_will_gib"
				}
				"CTFPlayer::SpeakConceptIfAllowed"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN9CTFPlayer21SpeakConceptIfAllowedEiPKcPcjP16IRecipientFilter"
					unistr "disguiseclass:%s"
				}
				"CTFPlayer::TFPlayerThink"
				{
					// weird function with dual ebx/ebp frame pointers for 16-byte alignment
					type   "func ebpprologue unistr"
					sym    "_ZN9CTFPlayer13TFPlayerThinkEv"
					unistr "Heal Target: ClipSize Data Limit Exceeded: %d (max 500)\n"
					// alt: "disguise_as_dispenser_on_crouch"
					// alt: "#TF_Powerup_Supernova_Deploy"
					// alt: "respawn_ghost"
					// alt: "reviver"
					// alt: "sticky_jump_landed"
					// alt: "rocket_jump_landed"
					// alt: "head_scale"
					// alt: "torso_scale"
					// alt: "hand_scale"
				}
				"CTFPlayer::Taunt"
				{
					type "sym"
					sym  "_ZN9CTFPlayer5TauntE8taunts_ti"
				}
				"CTFPlayer::FireBullet"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN9CTFPlayer10FireBulletEP13CTFWeaponBaseRK17FireBulletsInfo_tbii"
					unistr "penetration_damage_penalty"
				}
				"CTFPlayer::ForceChangeTeam"
				{
					type "sym"
					sym  "_ZN9CTFPlayer15ForceChangeTeamEib"
				}
				"CTFPlayer::ForceRespawn"
				{
					type "sym"
					sym  "_ZN9CTFPlayer12ForceRespawnEv"
				}
				
				"CTFPlayer::SpeakConceptIfAllowed"
				{
					type "sym"
					sym  "_ZN9CTFPlayer21SpeakConceptIfAllowedEiPKcPcjP16IRecipientFilter"
				}
				
				"CTFPlayer::StartBuildingObjectOfType"
				{
					type "sym"
					sym  "_ZN9CTFPlayer25StartBuildingObjectOfTypeEii"
				}
				
				"CTFPlayer::GetLoadoutItem"
				{
					type "sym"
					sym  "_ZN9CTFPlayer14GetLoadoutItemEiib"
				}
				
				"CTFPlayer::HandleCommand_JoinClass"
				{
					type "sym"
					sym  "_ZN9CTFPlayer23HandleCommand_JoinClassEPKcb"
				}
				"CTFPlayer::HandleCommand_JoinTeam"
				{
					type "sym"
					sym  "_ZN9CTFPlayer22HandleCommand_JoinTeamEPKc"
				}
				"CTFPlayer::IsReadyToPlay"
				{
					type "sym"
					sym  "_ZN9CTFPlayer13IsReadyToPlayEv"
				}
				"CTFPlayer::GetAutoTeam"
				{
					type "sym"
					sym  "_ZN9CTFPlayer11GetAutoTeamEi"
				}
				
				"CTFPlayer::ShouldDropAmmoPack"
				{
					type "sym"
					sym  "_ZN9CTFPlayer18ShouldDropAmmoPackEv"
				}
				
				"CTFPlayer::Event_Killed"
				{
					type "sym"
					sym  "_ZN9CTFPlayer12Event_KilledERK15CTakeDamageInfo"
				}
				
				"CTFPlayer::TeleportEffect"
				{
					type "sym"
					sym  "_ZN9CTFPlayer14TeleportEffectEv"
				}
				
				"CTFPlayer::HasTheFlag"
				{
					type "sym"
					sym  "_ZNK9CTFPlayer10HasTheFlagEP11ETFFlagTypei"
				}
				
				"CTFPlayer::CanBuild"
				{
					type "sym"
					sym  "_ZN9CTFPlayer8CanBuildEii"
				}
				
				"CTFPlayer::ManageRegularWeapons"
				{
					type "sym"
					sym  "_ZN9CTFPlayer20ManageRegularWeaponsEP19TFPlayerClassData_t"
				}
				
				"CTFPlayer::ReapplyPlayerUpgrades"
				{
					type "sym"
					sym  "_ZN9CTFPlayer21ReapplyPlayerUpgradesEv"
				}
				"CTFPlayer::ReapplyItemUpgrades"
				{
					type "sym"
					sym  "_ZN9CTFPlayer19ReapplyItemUpgradesEP13CEconItemView"
				}
				"CTFPlayer::RememberUpgrade"
				{
					type "sym"
					sym  "_ZN9CTFPlayer15RememberUpgradeEiP13CEconItemViewiib"
				}
				"CTFPlayer::ForgetFirstUpgradeForItem"
				{
					type "sym"
					sym  "_ZN9CTFPlayer25ForgetFirstUpgradeForItemEP13CEconItemView"
				}
				
				"CTFPlayerShared::AddCond"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared7AddCondE7ETFCondfP11CBaseEntity"
				}
				"CTFPlayerShared::RemoveCond"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared10RemoveCondE7ETFCondb"
				}
				"CTFPlayerShared::InCond"
				{
					type "sym"
					sym  "_ZNK15CTFPlayerShared6InCondE7ETFCond"
				}
				"CTFPlayerShared::StunPlayer"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared10StunPlayerEffiP9CTFPlayer"
				}
				"CTFPlayerShared::OnConditionAdded"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared16OnConditionAddedE7ETFCond"
				}
				"CTFPlayerShared::OnConditionRemoved"
				{
					type "sym"
					sym  "_ZN15CTFPlayerShared18OnConditionRemovedE7ETFCond"
				}
				"CTFPlayerShared::IsInvulnerable"
				{
					type "sym"
					sym  "_ZNK15CTFPlayerShared14IsInvulnerableEv"
				}
				
				"CTFPlayerSharedUtils::GetEconItemViewByLoadoutSlot"
				{
					type "sym"
					sym  "_ZN20CTFPlayerSharedUtils28GetEconItemViewByLoadoutSlotEP9CTFPlayeriPP11CEconEntity"
				}
				
				"GetTFConditionName"
				{
					type "sym"
					sym  "_Z18GetTFConditionName7ETFCond"
				}
				"GetTFConditionFromName"
				{
					type "sym"
					sym  "_Z22GetTFConditionFromNamePKc"
				}
			}
		}
	}
}
